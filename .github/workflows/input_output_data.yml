name: Practice Artifact Cache Input

on: workflow_dispatch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    # strategy:
    #     fail-fast: false
    #     matrix:
    #       python-version: ["3.8", "3.10", "3.11"]
    steps:

    - name: Check Out
      # https://github.com/actions/checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.email "nhonquy@gmail.com"
        git config --global user.name "GitHub Actions"

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        echo "${{toJSON(github)}}"
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-html
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run tests with pytest
      run: |
        pytest
      # ------------------------------------------------------------------------------------ #
  #  - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # ------------------------------------------------------------------------------------ #
  # ------------------------------------------------------------------------------------ #
  deploy:
    runs-on: ubuntu-latest
    needs: setup
    # needs: [setup, test, other-job]
    steps:
    - name: Check Out
      # https://github.com/actions/checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}
        fetch-depth: 0

    - name: Install zip
      run: sudo apt-get install zip

    - name: Configure Git
      run: |
        git config --global user.email "nhonquy@gmail.com"
        git config --global user.name "GitHub Actions"

    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Generate Zip file
      #zip -r sw-abcd.zip . -x "*.git*" -x "*.github*"
      run: |
        zip -r sw-abcd.zip fibonacci/
        ls -l sw-abcd.zip

    - name: Upload Artifacts1
      uses: actions/upload-artifact@v4
      with:
        name: my-demo-artifacts
        path: sw-abcd.zip
        compression-level: 6 # default
        if-no-files-found: ignore # default warn

  cd-process:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Get bulid artifacts
      uses: actions/download-artifact@v4
      with:
        name: my-demo-artifacts
        path: sw-abcd.zip
    - name: Unzip
      run: |
        unzip sw-abcd.zip
        ls -rlta
# - name: Upload Artifacts2
#   uses: actions/upload-artifact@v4
#   with:
#     name: my-demo-artifacts2
#     path: api/coronavstech/*
#     compression-level: 9
